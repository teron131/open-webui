This is a web app of chatbot.

Project Structure:

1. Main directory: Core of the application
2. `pipelines` directory: Serves as the plugin
3. `pipelines/pipelines` folder: Contains customization files

Development Guidelines:

- Avoid editing the core
- Only read core files for referencing, except `.env` and `.env.example`

Types of Pipelines:

1. Filters:

   - Purpose: Manipulate user input and/or LLM output to add, remove, format, or adjust the content of the body object
   - Components:
     a. Inlet Function: Pre-processes user input before sending to LLM
     b. Outlet Function: Post-processes LLM output before sending to user
   - Behavior: Default to always run
   - Configuration:
     - Implement a toggle env var
     - Implement a list of available pipelines to control

2. Pipes:

   - Purpose: Create a "Model" with custom logic and processing
   - Behavior: Shows up as a singular model in the OpenWebUI interface
   - Main Component:
     - Their id are their filenames by default, which will be useful for filtering by env var.
     - Pipe Function: Encapsulates all primary logic for the Pipe

3. Manifolds:
   - Purpose: Create a collection of Pipes, resulting in a set of "Models"
   - Typically used for integrations with other providers
   - Components:
     a. Pipelines Value: The `Pipeline` class contains a `self.pipelines` value which is a list of `{"id":, "name":}` to initiate the pipes.
     b. Pipe Function: Encapsulates primary logic for each Pipe

Shared Function Components:

1. Valves and UserValves:

   - Purpose: Allow users to provide dynamic details (e.g., API key, configuration options)
   - Implementation:
     - Create fillable fields or boolean switches in the GUI menu
   - Valves: Configurable by admins only
   - UserValves: Configurable by any user

2. Event Emitters:
   - Purpose: Add additional information to the chat interface
   - Types:
     a. Status: Add statuses to a message during processing steps
     b. Assistant: [Not specified in the provided information]
   - Behavior: Can be activated at any stage during the function
   - Capabilities:
     - Append content to the chat
     - Cannot strip information (unlike Filter Outlets)

Pipeline Control:

- Current method: Use environment variables
- Ensure to include a toggle and available pipelines list for Filters
